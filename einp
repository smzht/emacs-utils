#!/bin/bash
# -*- mode: sh; coding: utf-8-unix -*-

command_name=$(basename "$0")

function usage_exit() {
    cat << EOF >&2
Usage: $command_name [-s]
       $command_name -h
EOF
    exit $1
}

single_flg=0

while getopts :hs opt; do
    case $opt in
        h)
            usage_exit 0
            ;;
        s)
            single_flg=1
            ;;
        \?)
            usage_exit 2
            ;;
    esac
done

shift $(($OPTIND - 1))

if [ $# -ne 0 ]; then
    usage_exit 2
fi

function message() {
    echo "$command_name: $1" >&2
    exit 1
}

temp=$(mktemp -t "$command_name.XXXXXXXXXX")

trap 'rm -f "$temp"' 0

if [ $single_flg -eq 0 ]; then
    perl -0pe 's/\n$//'
else
    perl -0pe 's/([^&; ] *)\n(.)/\1;\n\2/g; s/\n/ /g; s/ $//'
fi > "$temp"

einp=$(cat << EOF
(progn
  (let ((buffer-name (buffer-name (car (buffer-list)))))
    (if (string-match "^\\*shell\\*" buffer-name)
        (with-current-buffer buffer-name
          (insert-file-contents "$temp")
          (goto-char (point-max)))
      nil))
  )
EOF
)

if [[ $(emacsclient -e "$einp") = nil ]]; then
    message "buffer-list の先頭バッファが shell バッファではありません"
fi
