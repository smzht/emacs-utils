#!/bin/bash
# -*- mode: sh; coding: utf-8-unix -*-

command_name=$(basename "$0")

function usage_exit() {
    cat << EOF >&2
Usage: $command_name [-q query] [file]
       $command_name -h
EOF
    exit $1
}

query=""

while getopts :hq: opt; do
    case $opt in
        h)
            usage_exit 0
            ;;
        q)
            query="$OPTARG"
            ;;
        \?)
            usage_exit 2
            ;;
    esac
done

shift $((OPTIND - 1))

if [ $# -ne 0 ] && [ $# -ne 1 ]; then
    usage_exit 2
fi

function message() {
    echo "$command_name: $1" >&2
    exit 1
}

if [ $# -eq 1 ] && [ ! -r "$1" ]; then
    message '指定したファイルを読み込むことができません'
fi

temp1=$(mktemp -t "$command_name.XXXXXXXXXX")
temp2=$(mktemp -t "$command_name.XXXXXXXXXX")

trap 'rm -f "$temp1" "$temp2"' 0

epeco=$(cat << EOF
(progn
  (let ((buffer (car (buffer-list))))
    (if (string-match "^\\*shell\\*" (buffer-name buffer))
        (let ((remote-name (file-remote-p (buffer-local-value 'default-directory buffer))))
          (helm :sources (helm-build-in-file-source "Epeco"
                           (concat remote-name "$temp1")
                           :candidate-number-limit 10000
                           :action (helm-make-actions
                                    "Output" (lambda (candidate)
                                               (with-temp-buffer
                                                 (dolist (cand (helm-marked-candidates))
                                                   (insert (format "%s\n" cand)))
                                                 (write-region nil nil (concat remote-name "$temp2") nil 'nomsg))
                                               (message "")))
                           :migemo t)
                :input "$query"
                :prompt "[MIGEMO] pattern: "
                :buffer "*helm epeco*")
          t)
      nil))))
EOF
)

if [ $# -eq 0 ]; then
    cat
else
    cat "$1"
fi > "$temp1"

case $(emacsclient -e "$epeco") in
    t)
        cat "$temp2"
        ;;
    nil)
        message "buffer-list の先頭バッファが shell バッファではありません"
        ;;
    *)
        ;;
esac
